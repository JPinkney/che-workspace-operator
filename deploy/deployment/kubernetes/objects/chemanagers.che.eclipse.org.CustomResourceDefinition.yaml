apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: devworkspace-che-operator
    app.kubernetes.io/part-of: devworkspace-che-operator
  name: chemanagers.che.eclipse.org
spec:
  group: che.eclipse.org
  names:
    kind: CheManager
    listKind: CheManagerList
    plural: chemanagers
    singular: chemanager
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CheManager is the configuration of the CheManager layer of Devworkspace.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CheManagerSpec holds the configuration of the Che controller.
            properties:
              gatewayConfigurerImage:
                description: GatewayConfigureImage is the docker image to use for the sidecar of the Che gateway that is used to configure it. This is only used in the singlehost mode. If not defined in the CR, it is taken from the `RELATED_IMAGE_gateway_configurer` environment variable of the che operator deployment/pod. If not defined there it defaults to a hardcoded value.
                type: string
              gatewayDisabled:
                description: GatewayDisabled enables or disables routing of the relocatable workspace compontents through a common gateway. Default value is "false" meaning that the gateway is enabled. If disabled, all endpoints are deployed on a subdomain of a WorkspaceComponentBaseDomain. If enabled, components marked as relocatable are exposed on a unique subpath of the the GatewayHost, while the rest of the workspace components are exposed on subdomains of the WorkspaceComponentBaseDomain.
                type: boolean
              gatewayHost:
                description: GatewayHost is the full host name used to expose workspace endpoints that have relocatable roots. Mandatory on Kubernetes, optional on OpenShift.
                type: string
              gatewayImage:
                description: GatewayImage is the docker image to use for the Che gateway.  This is only used in the singlehost mode. If not defined in the CR, it is taken from the `RELATED_IMAGE_gateway` environment variable of the che operator deployment/pod. If not defined there it defaults to a hardcoded value.
                type: string
            type: object
          status:
            properties:
              gatewayHost:
                description: GatewayHost is the resolved host of the ingress/route, on which the gateway is accessible.
                type: string
              gatewayPhase:
                description: GatewayPhase specifies the phase in which the singlehost gateway deployment currently is. If the manager routing is not singlehost, this is "Inactive"
                type: string
              message:
                description: Message contains further human-readable info for why the manager is in the phase it currently is.
                type: string
              phase:
                description: Phase is the phase in which the manager as a whole finds itself in.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
